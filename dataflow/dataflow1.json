{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empdataset",
						"type": "DatasetReference"
					},
					"name": "empdata"
				},
				{
					"dataset": {
						"referenceName": "deptdataset",
						"type": "DatasetReference"
					},
					"name": "deptdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outputdataset",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "empjoin"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empno as string,",
				"          empname as string,",
				"          company as string,",
				"          city as string,",
				"          doj as string,",
				"          deptid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> empdata",
				"source(output(",
				"          deptid as string,",
				"          deptname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> deptdata",
				"empdata, deptdata join(empdata@deptid == deptdata@deptid,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     partitionBy('hash', 1),",
				"     broadcast: 'auto')~> empjoin",
				"empjoin sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['empdeptjoindata'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empno,",
				"          empname,",
				"          company,",
				"          doj,",
				"          deptname",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}